<div id="settingsPlugins">
    <h3 class="mt-4">Plugins</h3>
    <form class="form mx-auto">
        <p> In this section, you can configure the plugins engine of your server. You can see more information about the plugins <a target="_blank" href="https://github.com/quentintaranpino/nostrcheck-server/blob/main/PLUGINS.md">here</a>
        </p>
        <label for="plugins.enabled" class="mt-2 mb-1 fw-bold">Enable plugins</label>
        <p>Enable or disable the plugins engine.
        </p>
        <div class="form-check form-switch">
            <input  class="form-check-input" 
                    type="checkbox" 
                    value="<%= locals.settingsPlugins['enabled'] ? true : false %>" 
                    <%= locals.settingsPlugins['enabled'] ? 'checked' : '' %> 
                    name="plugins.enabled" 
                    id="plugins.enabled"
                    >
        </div>
        <label for="plugins.reload" class="mt-3 mb-1 fw-bold">Reload plugins</label>
        <p>Rerun the plugins engine to load new plugins or changes in the existing ones.
        </p>
        <div class="col-12 col-md-3 mb-5 mt-4 pb-5 pb-lg-0 mb-lg-2">
            <button class="btn btn-lg mb-4 btn-primary w-100" name="plugins.reload" id="plugins.reload" type="button" onclick="reloadPlugins()"><i class="fa-solid fa-sync"></i> Reload</button>
        </div>
        <label for="plugins.path" class="mt-1 mb-1 fw-bold">Plugins folder path</label>
        <p>Set the path where the plugins are located.
        </p>
        <div class="col-12 col-md-4">
            <input  type="text" 
                    id="plugins.path"
                    name="plugins.path" 
                    class="form-control" 
                    value="<%= locals.settingsPlugins['path'] %>" 
                    placeholder="Default: plugins/" 
                    required
                    >
        </div> 
        <div>
            <label for="plugins-table" class="mt-3 mb-1 fw-bold">Plugins list</label>
            <p>
                Here you can see the list of plugins that are currently installed in your server. You can change the name, order and enable or disable the plugins edditing the plugin files.
            </p>
            <table id="plugins-table" class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Order</th>
                        <th scope="col">Enabled</th>
                        <th scope="col">Name</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="col-12 col-md-3 mb-5 mt-4 pb-5 pb-lg-0 mb-lg-2">
            <button class="btn btn-lg mb-4 btn-primary w-100" name="Submit" type="button" onclick="saveSettings()">Save</button>
        </div>
    </form>
  </div>

<script>
function reloadPlugins() {
    document.getElementById('plugins.reload').disabled = true;
    document.getElementById('plugins.reload').innerHTML = '<i class="fa-solid fa-sync fa-spin"></i> Reloading...';
    fetch('/api/v2/plugins/reload', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + localStorage.getItem('authkey')
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.status == "success") {
            showMessage(`Plugins reloaded successfully`, "alert-primary");
            localStorage.setItem('authkey', data.Authkey);
            getPlugins();
        } else {
            showMessage(`Error reloading plugins: ${data.message}`, "alert-warning");
        }
    })
    .catch((error) => {
        console.error('Error:', error);
    })
    .finally(() => {
        document.getElementById('plugins.reload').disabled = false;
        document.getElementById('plugins.reload').innerHTML = '<i class="fa-solid fa-sync"></i> Reload';
    });
}

function getPlugins() {
    fetch('/api/v2/plugins', {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + localStorage.getItem('authkey')
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.status == "success") {
            localStorage.setItem('authkey', data.Authkey);
            $('#plugins-table').bootstrapTable('load', data.plugins);
        } else {
            showMessage(`Error loading plugins: ${data.message}`, "alert-warning");
        }
    })
    .catch((error) => {
        console.error('Error:', error);
    });
}

document.addEventListener('DOMContentLoaded', () => {
    $('#plugins-table').bootstrapTable({
        columns: [{
            field: 'order',
            title: 'Order',
            align: 'center',
        }, {
            field: 'enabled',
            title: 'Enabled',
            formatter: (value) => value ? 'True' : 'False',
            align: 'center'
        }, {
            field: 'name',
            title: 'Name',
            align: 'center'
        }],
        sortName: 'order',
        sortOrder: 'asc'
    });
    getPlugins();
});
</script>