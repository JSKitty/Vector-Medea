<div id="<%- dashcardId %>" class="col-xl-3 col-lg-4 col-md-6 col-sm-12 dashcard d-none">
    <div class="card mb-3 shadow-sm default-bg" style="min-height: 220px">
      <div class="card-body text-center">
        <% if (link) { %>
          <a href="<%- link %>" class="text-decoration-none text-reset">
        <% } %>
        <div class="d-flex justify-content-between align-items-center">
          <h5 id="<%- dashcardId %>-name" class="card-title mb-0"></h5>
          <div id="<%- dashcardId %>-icon-container">
            <i id="<%- dashcardId %>-icon" class="fas fa-chart-simple fa-3x card-icon"></i>
          </div>
        </div>
        <h1 id="<%- dashcardId %>-text-total" class="display-2 m-0 font-weight-bold dash-text">0</h1>     
        <% if(showField){ %><h1 id="<%- dashcardId %>-text-field" class="lead fs-6 font-weight-bold dash-text">0</h1> <% } %>    
        <% if (link) { %>
          </a>
        <% } %>
        <div id="<%- dashcardId %>-tooltip-text" class="chart-tooltip-content text-start fs-6 fw-light">0</div>
      </div>
      <button id="<%- dashcardId %>-reload-button" class="btn btn-dashcard btn-dash-reload">
        <i class="fas fa-sync-alt"></i>
      </button>
      <div class="btn-dash-edit-container">
        <button id="<%- dashcardId %>-handle-button" class="btn btn-dashcard btn-dash-edit btn-dash-handle handle d-none">
          <i class="fas fa-arrows-alt"></i>
        </button>
        <button id="<%- dashcardId %>-visibility-button" class="btn btn-dashcard btn-dash-edit btn-dash-visibility handle d-none">
          <i class="fas fa-eye"></i>
        </button>
      </div>
    </div>
  </div>
  
<style>
.card {
    position: relative;
    transition: transform 0.3s;
    color: var(--bs-secondary-color);
}

.card:hover { 
    transform: scale(1.04);
}

.card-icon {
    color: #a575ff;
}

.card-icon-container {
    width: 55px;
    height: 55px;
}

.btn-dashcard:hover {
        background-color: rgba(0, 0, 0, 0.2); 
    }

.btn-dashcard {
    position: absolute;
    background-color: rgba(0, 0, 0, 0.1);
    border: none;
    border-radius: 50%;
    padding: 10px;
    cursor: pointer;
    transition: background-color 0.3s;
}

.btn-dash-reload {
    bottom: 10px;
    right: 10px;
}

.btn-dash-edit-container {
    position: absolute;
    top: 60%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    gap: 30px;  /* Espacio entre los botones */
}

.btn-dash-edit-container .btn-dashcard {
    position: static; 
}

.btn-dash-edit {
    transform: scale(1.5);
}

.chart-tooltip-content {
    position: absolute;
    bottom: 11px;
    opacity: 0;
    transition: opacity 0.5s !important;
}

.chart-tooltip-content.visible {
    visibility: visible;
    opacity: 1;
    transition: opacity 0.5s !important;
}

</style>

<script>
document.addEventListener('DOMContentLoaded', async () => {

  const dashcardId = "<%- dashcardId %>";
  const dashcardName = "<%- dashcardName %>";
  const dashcardDataKey = "<%- dashcardDataKey %>";
  const icon = "<%- icon %>";
  const link = "<%- link %>";
  const action = "<%- action %>";
  const field = "<%- field %>";
  const timeout = Number("<%= typeof timeout !== 'undefined' ? timeout : 60000 %>");

    $('#' + dashcardId + '-name').text(dashcardName)
    const iconElement = $('#' + dashcardId + '-icon');
    iconElement.removeClass(); 
    iconElement.addClass('fa-3x card-icon');

    if (icon === "chart") {
        iconElement.addClass('fas fa-chart-simple');
    } else if (icon === "warning") {
        iconElement.addClass('fas fa-exclamation-triangle text-warning');
    } else if (icon === "satoshi") {
        iconElement.addClass('fas fa-bolt-lightning text-warning');
    } else if (icon === "doughnut") {
        const iconContainer = $('#' + dashcardId + '-icon-container');
        iconContainer.append('<canvas style="border 1px solid black" id="' + dashcardId + '-doughnut-chart" width="50" height="50"></canvas>');
    } else if (icon === "time") {
        iconElement.addClass('fas fa-clock text-info');
    } else if (icon === "relay") {
        iconElement.addClass('bi bi-broadcast-pin text-secondary');
    } else if (icon == "activity") {
        iconElement.addClass('fas fa-chart-line text-secondary');
    } else {
        iconElement.addClass('fas fa-chart-simple');
    }

    $('#' + dashcardId + '-reload-button').on('click', async function() {
      semaphore.execute(async() => await refreshDashcard(dashcardId, dashcardDataKey, action, field));
    });

    setInterval(async () => {
      semaphore.execute(async() => await refreshDashcard(dashcardId, dashcardDataKey, action, field));
    }, timeout);

    semaphore.execute(async() => await refreshDashcard(dashcardId, dashcardDataKey, action, field));

    const refreshDashcard = async(dashcardId, dashcardDataKey, action, field) => {
      $('#' + dashcardId + '-tooltip-text').addClass('visible');
      $('#' + dashcardId + '-tooltip-text').text('Retrieving data...');

      const countData = await fetchDashcardData(dashcardDataKey, action, field)
      $('#' + dashcardId + '-text-total').text(countData.total);
      $('#' + dashcardId + '-text-field').text(`of ${countData.field}`);
      if (field !== "" && field !== undefined && icon == 'doughnut') {
        setTimeout(() => {
          $('#' + dashcardId + '-tooltip-text').text('Updating chart...');
          initDoughnutChart(dashcardId, dashcardDataKey, {field: countData.field, total: countData.total}, field, false, false, true)
        }, 500);
      }
      setTimeout(() => {$('#' + dashcardId + '-tooltip-text').removeClass('visible')}, 1000);
    }

    const fetchDashcardData = async (dashcardDataKey, action, field) => {
    try {
        if (dashcardDataKey === 'admin' && action == 'status') {
            const res = await fetch('admin/status');
            const serverInfo = await res.json();

            const timeParts = serverInfo.uptime.split(':');
            if (timeParts.length === 3) serverInfo.uptime = `${timeParts[0]}:${timeParts[1]}`;

            return { field: serverInfo[field], total: serverInfo[field] };
        }

        const res = await fetch(`admin/modulecountdata?module=${dashcardDataKey}&action=${action}&field=${field}`, {
            method: 'GET',
            headers: { 'Content-Type': 'application/json' },
        });

        const data = await res.json();
        return data || { total: 0 };
    } catch (error) {
        console.error('Error:', error);
        return { total: 0 };
    }
};

});

</script>