<link href="https://cdn.jsdelivr.net/npm/jquery-resizable-columns@0.2.3/dist/jquery.resizableColumns.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-table@1.22.6/dist/bootstrap-table.min.css" rel="stylesheet">
<link rel="stylesheet" href="/static/css/table.css">
<link rel="stylesheet" href="/static/css/form.css">

<html lang="en">
  <%- include('./partials/head',{title: `${locals.serverHost} - Dashboard`}); %>
  <body class="d-flex flex-column h-100">
    <%- include('./partials/navbar', {active:'dashboard'}); %>
    <main class="pb-1">
      <div class="text-center"><h1 class="display-2 mt-2 gradient-text">Dashboard</h1></div>
      <p class="text-center mt-2 display-6" id="welcome-text"></p>
      <div class= "container-fluid mt-5">
        <%- include('./components/dashboard/dashcards'); %>
        <ul class="nav nav-tabs mt-3 lead " id="dashboardTabs" role="tablist">
          <% if(locals.activeModules.includes('nostraddress')) { %>
            <li class="nav-item" role="presentation">
              <button class="nav-link active" id="users-tab" data-bs-toggle="tab" data-bs-target="#users" type="button" role="tab"><i class="fa fa-user me-2"></i>Registered users</button>
            </li>
          <% } %>
          <% if(locals.activeModules.includes('nostraddress')) { %>
            <li class="nav-item" role="presentation">
              <button class="nav-link" id="invites-tab" data-bs-toggle="tab" data-bs-target="#invites" type="button" role="tab"><i class="fa fa-envelope-open-text me-2"></i>Invites</button>
            </li>
          <% } %>
          <% if(locals.activeModules.includes('media')) { %>
            <li class="nav-item" role="presentation">
              <button class="nav-link" id="files-tab" data-bs-toggle="tab" data-bs-target="#files" type="button" role="tab"><i class="fa fa-folder-open me-2"></i>Hosted files</button>
            </li>
          <% } %>
          <% if(locals.activeModules.includes('lightning')) { %>
            <li class="nav-item" role="presentation">
              <button class="nav-link" id="lightning-tab" data-bs-toggle="tab" data-bs-target="#lightning" type="button" role="tab"><i class="fa fa-diamond-turn-right me-2"></i></i>Lightning redirects</button>
            </li>
          <% } %>
          <% if(locals.activeModules.includes('domains')) { %>
            <li class="nav-item" role="presentation">
              <button class="nav-link" id="domains-tab" data-bs-toggle="tab" data-bs-target="#domains" type="button" role="tab"><i class="fa fa-list  me-2"></i>Domains</button>
            </li>
          <% } %>
          <% if(locals.activeModules.includes('payments')) { %>
            <li class="nav-item" role="presentation">
              <button class="nav-link" id="payments-tab" data-bs-toggle="tab" data-bs-target="#payments" type="button" role="tab"><i class="fa fa-bolt-lightning text-warning  me-2"></i>Payments</button>
            </li>
          <% } %>
          <% if((locals.activeModules.includes('media') || locals.activeModules.includes('nostraddress') || locals.activeModules.includes('relay')) && locals.activeModules.includes('admin')  ) { %> 
            <li class="nav-item" role="presentation">
              <button class="nav-link" id="security-tab" data-bs-toggle="tab" data-bs-target="#security" type="button" role="tab"><i class="fa fa-shield-halved me-2"></i>Security</button>
            </li>
          <% } %>
          <% if(locals.activeModules.includes('relay')) { %>
            <li class="nav-item" role="presentation">
              <button class="nav-link" id="relay-tab" data-bs-toggle="tab" data-bs-target="#relay" type="button" role="tab"><i class="fa fa-wifi  me-2"></i> Relay</button>
            </li>
          <% } %>
        </ul>
      </div>
      <div class="tab-content w-100 p-3 overflow-auto" id="dashboardTabsContent">
        <div class="tab-pane fade show active" id="users" role="tabpanel" aria-labelledby="users-tab">
          <%- include('./components/dashboard/users'); %>
        </div>
        <div class="tab-pane fade " id="invites" role="tabpanel" aria-labelledby="invites-tab">
          <%- include('./components/dashboard/invites'); %>
        </div>
        <div class="tab-pane fade " id="files" role="tabpanel" aria-labelledby="files-tab">
          <%- include('./components/dashboard/files'); %>
        </div>
        <div class="tab-pane fade " id="lightning" role="tabpanel" aria-labelledby="lightning-tab">
          <%- include('./components/dashboard/lightning'); %>
        </div>
        <div class="tab-pane fade " id="domains" role="tabpanel" aria-labelledby="domains-tab">
          <%- include('./components/dashboard/domains'); %>
        </div>
        <div class="tab-pane fade " id="payments" role="tabpanel" aria-labelledby="payments-tab">
          <%- include('./components/dashboard/payments'); %>
        </div>
        <div class="tab-pane fade " id="security" role="tabpanel" aria-labelledby="security-tab">
          <%- include('./components/dashboard/banned'); %>
          <%- include('./components/dashboard/ips'); %>  
        </div>
        <div class="tab-pane fade " id="relay" role="tabpanel" aria-labelledby="relay-tab">
          <%- include('./components/dashboard/relay'); %>
        </div>
      </div>
     </main>
    <%- include('./partials/footer', {active:'dashboard'}); %>    
    <%- include('./components/modals/media-modal'); %>
  </body>
<script>
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="/static/js/chart.js"></script>

<script>
  
  // Welcome text
  if (localStorage.getItem('profileData')){
  document.getElementById('welcome-text').innerHTML = `Welcome ${JSON.parse(localStorage.getItem('profileData')).display_name}, this is the status of your server today`;
  }

  const fetchCountData = async (datakey, action, field) => {
    let serverData  = ""
    await fetch(`admin/modulecountdata?module=${datakey}&action=${action}&field=${field}`, {
      method: 'GET', headers: {'Content-Type': 'application/json'}})
      .then(response => response.json())
      .then(data => {
          serverData = data;
      })
      .catch(error => console.error('Error:', error));

      return serverData || { total: 0 }
  }
  
  document.addEventListener("DOMContentLoaded", async function () {

    // Charts initialization
    const initChars = async() => {
      if (activeModules.includes("nostraddress")) {
        semaphore.execute(async() => await initMonthChart("#usersData-chart",'Registered users', await fetchCountData('nostraddress','monthCount', 'date')))
      }
      if (activeModules.includes("media")) {
        semaphore.execute(async() => await initMonthChart('#filesData-chart','Hosted files', await fetchCountData('media','monthCount', 'date')))
      }
      if (activeModules.includes("payments")) {
        semaphore.execute(async() => await initMonthChart("#paymentsData-chart",'Transactions', await fetchCountData('payments','monthCount', 'createddate')))
      }
      if (activeModules.includes("relay")) {
        semaphore.execute(async() => await initMonthChart("#relayData-chart",'Relay events', await fetchCountData('relay','monthCount', 'created_at')))
      }
    }
    initChars();
  });

  // Tab change and doughnut chart initialization
  document.addEventListener("DOMContentLoaded", async function () {
    const activeTab = document.querySelector('#dashboardTabs button.nav-link.active');
    if (activeTab) handleTabChange({ target: activeTab }); 
  });

  document.querySelectorAll('#dashboardTabs button[data-bs-toggle="tab"]').forEach(tab => {
      tab.addEventListener("shown.bs.tab", async function (event) {
          handleTabChange(event);
      });
  });

  async function handleTabChange(event) {
    const doughnuts = [
      {id: 'users',  dataKey: 'nostraddress', field: 'checked', title: 'Checked users'},
      {id: 'files',  dataKey: 'media', field: 'checked', title: 'Checked files'},
      {id: 'payments',  dataKey: 'payments', field: 'paid', title: 'Paid transactions'},
      {id: 'relay', dataKey: 'relay', field: 'active', title: 'Active events'}
    ]
    const targetId = event.target.getAttribute("data-bs-target").replace("#", "");
    const dataKey = doughnuts.find(d => d.id == targetId)?.dataKey;
    const field = doughnuts.find(d => d.id == targetId)?.field;
    const title = doughnuts.find(d => d.id == targetId)?.title;

    if (!dataKey) return;
    const doughnutData = await fetchCountData(dataKey,'count', field);
    semaphore.execute(async() => {initDoughnutChart(`${targetId}Data`, title,{field: doughnutData.field, total:doughnutData.total}, field, true, true)});
  }

</script>
</html>
